const n={},p=`<h2>前景导入</h2>
<p>​	如果你已经精通C语言、常用数据结构及常用算法，请自动忽略此文档。以下个人观点，可供参考。</p>
<p>​	对于相关内容有任何疑惑都可以直接在群里提问。</p>
<h2>语法基础</h2>
<h4>目的</h4>
<p>​	锻炼基础编码能力，对程序流程，数据类型有一定理解，为之后算法学习打好基础。</p>
<h4>学习目标</h4>
<p>​	了解OJ网站是什么。</p>
<p>​	完成基础语法题单。</p>
<p>​	（基础题单将在27号对新生开放）</p>
<p>​	（题单题目参考自洛谷，奥赛一本通...）</p>
<p>​	学习输入输出的各种方式，对格式化输入输出。</p>
<p>​	学习c语言，了解c与c++的区别，可以灵活的使用c/c++。</p>
<h2>时间复杂度</h2>
<h4>目的</h4>
<p>​	学习时间复杂度是学习算法的基础，了解时间复杂度可以帮助我们快速判别程序的可行性。</p>
<h4>学习目标</h4>
<p>​	1.了解大O记法，对程序的时间复杂度可以进行一个较好的预估。</p>
<p>​	2.学习快速读写，了解scanf/printf和cin/cout/关闭同步流的cin/cout的数据录入输出时间区别。</p>
<h2>C++STL库</h2>
<h4>目的</h4>
<p>​	了解基础数据结构，可以灵活使用不同的数据结构来解决不同的数据问题。</p>
<h4>学习目标</h4>
<p>​	1.vector动态数组</p>
<p>​	2.stack栈</p>
<p>​	3.queue队列</p>
<p>​	4.list链表</p>
<p>​	5.set集合</p>
<p>​	6.map映射</p>
<p>​	7.algorithm算法库</p>
<p>​	8.cmath数学库</p>
<p>​	9.deque双向队列</p>
<p>​	在以后写题的时候灵活应用上述数据结构，便可以得到练习。</p>
<p>注：在此阶段你应该学会各种题目的数据如何输入。包含：多组输入，未定数量的输入。</p>
<h2>基础算法设计</h2>
<h4>目的</h4>
<p>​	运用各种基础算法，进行基础题目的算法设计。</p>
<p>​	以下列出的算法学习路径仅为个人观点，可供参考。</p>
<h4>学习目标</h4>
<ol>
<li>
<p>​	模拟</p>
</li>
<li>
<p>​	高精度</p>
</li>
<li>
<p>​	排序</p>
</li>
<li>
<p>​	枚举</p>
</li>
<li>
<p>​	前缀和</p>
</li>
<li>
<p>​	差分</p>
</li>
<li>
<p>​	递推</p>
</li>
<li>
<p>​	递归</p>
</li>
<li>
<p>​	快速幂</p>
</li>
<li>
<p>​	简单贪心</p>
</li>
<li>
<p>​	双指针</p>
</li>
<li>
<p>​	二分查找</p>
</li>
<li>
<p>​	二分答案</p>
</li>
<li>
<p>​	离散化</p>
</li>
<li>
<p>​	DFS</p>
</li>
<li>
<p>​	BFS</p>
</li>
<li>
<p>​	记忆化搜索</p>
</li>
<li>
<p>​	状态剪枝</p>
</li>
<li>
<p>​	基础数论</p>
</li>
<li>
<p>​	并查集</p>
</li>
<li>
<p>​	哈希表</p>
</li>
<li>
<p>​	二叉树基础</p>
</li>
<li>
<p>​	图论基础</p>
</li>
<li>
<p>​	空间换时间</p>
</li>
<li>
<p>​    单调栈</p>
</li>
<li>
<p>​    单调队列</p>
</li>
<li>
<p>​    并归排序</p>
</li>
<li>
<p>​    RMQ</p>
</li>
<li>
<p>​    倍增</p>
</li>
<li>
<p>​    ST表</p>
</li>
<li>
<p>​     二叉堆</p>
</li>
<li>
<p>​     树状数组</p>
</li>
<li>
<p>​     线段树基础</p>
</li>
<li>
<p>​     KMP</p>
</li>
<li>
<p>​     字典树</p>
</li>
<li>
<p>​     0-1字典树</p>
<p>暂时到此 但算法刚刚开始</p>
</li>
</ol>
`;export{n as attributes,p as html};
